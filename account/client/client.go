// Code generated by goctl. DO NOT EDIT!
// Source: account.proto

package client

import (
	"context"

	"github.com/chernyakoff/telemon/account/types/account"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccountGetAnyRequest = account.AccountGetAnyRequest
	AccountGetRequest    = account.AccountGetRequest
	AccountGetResponse   = account.AccountGetResponse
	AccountUpdateRequest = account.AccountUpdateRequest
	AccountUpsertRequest = account.AccountUpsertRequest
	MessageResponse      = account.MessageResponse

	Account interface {
		Upsert(ctx context.Context, in *AccountUpsertRequest, opts ...grpc.CallOption) (*MessageResponse, error)
		Update(ctx context.Context, in *AccountUpdateRequest, opts ...grpc.CallOption) (*MessageResponse, error)
		Get(ctx context.Context, in *AccountGetRequest, opts ...grpc.CallOption) (*AccountGetResponse, error)
		GetAny(ctx context.Context, in *AccountGetAnyRequest, opts ...grpc.CallOption) (*AccountGetResponse, error)
	}

	defaultAccount struct {
		cli zrpc.Client
	}
)

func NewAccount(cli zrpc.Client) Account {
	return &defaultAccount{
		cli: cli,
	}
}

func (m *defaultAccount) Upsert(ctx context.Context, in *AccountUpsertRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	client := account.NewAccountClient(m.cli.Conn())
	return client.Upsert(ctx, in, opts...)
}

func (m *defaultAccount) Update(ctx context.Context, in *AccountUpdateRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	client := account.NewAccountClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultAccount) Get(ctx context.Context, in *AccountGetRequest, opts ...grpc.CallOption) (*AccountGetResponse, error) {
	client := account.NewAccountClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}

func (m *defaultAccount) GetAny(ctx context.Context, in *AccountGetAnyRequest, opts ...grpc.CallOption) (*AccountGetResponse, error) {
	client := account.NewAccountClient(m.cli.Conn())
	return client.GetAny(ctx, in, opts...)
}
